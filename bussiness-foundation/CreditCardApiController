using Mediachase.BusinessFoundation.Data;
using Mediachase.BusinessFoundation.Data.Business;
using Mediachase.BusinessFoundation.Data.Meta.Management;
using Mediachase.Commerce.Customers;
using Newtonsoft.Json;
using Serilog;

namespace Foundation.Custom
{
    [ApiController]
    [Route("CreditCard")]
    public class CreditCardApiController : ControllerBase
    {
        public CreditCardApiController()
        {

        }

        [HttpGet]
        [Route("CreateCreditCard")]

        public async Task<ActionResult<string>> CreateCreditCard([FromQuery] string firstName = null)
        {
            var _contact = CustomerContext.Current.CurrentContact;
            var creditcard = CreditCard.CreateInstance();
            creditcard.CardType = (int)CreditCard.eCreditCardType.Visa;

            creditcard.CreditCardNumber = "421698997636466";
            creditcard.LastFourDigits = "6466";
            _contact.AddCreditCard(creditcard);
            _contact.SaveChanges();


            return Ok("create credit cart successfully");
        }

        [HttpGet]
        [Route("GetCreditCard")]

        public async Task<ActionResult<string>> GetCreditCard([FromQuery] string firstName = null)
        {
            var contact = CustomerContext.Current.CurrentContact;

            // var cards = contact.ContactCreditCards.ToList();
            // var cards = CustomerContext.Current.GetContactCreditCards(_contact);

            var filterByContactId = new FilterElement("ContactId", FilterElementType.Equal, contact.PrimaryKeyId);
            var cards = BusinessManager.List(CreditCard.ClassName, new[] { filterByContactId });
            var cardTypes = cards.OfType<CreditCard>().ToList(); // it seem failed to convert the type and make the list empty

            var cartsText = cards.Select(c => c.Properties["LastFourDigits"].Value);

            return Ok(string.Join(",", cartsText));
        }
    }
}
